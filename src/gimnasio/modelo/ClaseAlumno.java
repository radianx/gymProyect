package gimnasio.modelo;
// Generated Dec 8, 2018 5:14:35 PM by Hibernate Tools 4.3.1


import java.time.DayOfWeek;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.TemporalAdjusters;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
import java.util.Set;

/**
 * ClaseAlumno generated by hbm2java retouched by Osoft
 */
public class ClaseAlumno  implements java.io.Serializable {

     private int idclasealumno;
     private Alumno alumno;
     private ClaseProfesor claseProfesor;
     private String estado;
     private Double precio;
     private int diasPorSemana;
     private Set<HorarioAlumno> horarios = new HashSet(0);
     private Set<AsistenciaAlumno> asistenciaAlumnos = new HashSet(0);

    public ClaseAlumno() {
    }

    public ClaseAlumno(int idclasealumno, Alumno alumno, ClaseProfesor claseProfesor, String estado, Double precio, int diasPorSemana) {
        this.idclasealumno = idclasealumno;
        this.alumno = alumno;
        this.claseProfesor = claseProfesor;
        this.estado = estado;
        this.precio = precio;
        this.diasPorSemana = diasPorSemana;
    }

	
    public ClaseAlumno(Alumno alumno, ClaseProfesor claseProfesor, Double precio,int dias, String estado) {
        this.alumno = alumno;
        this.claseProfesor = claseProfesor;
        this.precio = precio;
        this.estado = estado;
        this.diasPorSemana = dias;
    }
    
    public ClaseAlumno(int idclasealumno, Alumno alumno, ClaseProfesor claseProfesor, String estado, Set<AsistenciaAlumno> asistenciaAlumnos) {
       this.idclasealumno = idclasealumno;
       this.alumno = alumno;
       this.claseProfesor = claseProfesor;
       this.estado = estado;
       this.asistenciaAlumnos = asistenciaAlumnos;
    }
   
    public int getIdclasealumno() {
        return this.idclasealumno;
    }
    
    public void setIdclasealumno(int idclasealumno) {
        this.idclasealumno = idclasealumno;
    }
    public Alumno getAlumno() {
        return this.alumno;
    }
    
    public void setAlumno(Alumno alumno) {
        this.alumno = alumno;
    }
    public ClaseProfesor getClaseProfesor() {
        return this.claseProfesor;
    }
    
    public void setClaseProfesor(ClaseProfesor claseProfesor) {
        this.claseProfesor = claseProfesor;
    }
    public String getEstado() {
        return this.estado;
    }
    
    public void setEstado(String estado) {
        this.estado = estado;
    }
    public Set<AsistenciaAlumno> getAsistenciaAlumnos() {
        return this.asistenciaAlumnos;
    }
    
    public void setAsistenciaAlumnos(Set<AsistenciaAlumno> asistenciaAlumnos) {
        this.asistenciaAlumnos = asistenciaAlumnos;
    }

    public Double getPrecio() {
        return precio;
    }

    public void setPrecio(Double precio) {
        this.precio = precio;
    }

    public int getDiasPorSemana() {
        return diasPorSemana;
    }

    public void setDiasPorSemana(int diasPorSemana) {
        this.diasPorSemana = diasPorSemana;
    }

    public Set<HorarioAlumno> getHorarios() {
        return horarios;
    }

    public void setHorarios(Set<HorarioAlumno> horarios) {
        this.horarios = horarios;
    }

    @Override
    public String toString() {
        return claseProfesor.getClase().getDescripcionclase();
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 67 * hash + this.idclasealumno;
        hash = 67 * hash + Objects.hashCode(this.alumno);
        hash = 67 * hash + Objects.hashCode(this.claseProfesor);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ClaseAlumno other = (ClaseAlumno) obj;
        if (this.idclasealumno != other.idclasealumno) {
            return false;
        }
        if (!Objects.equals(this.alumno, other.alumno)) {
            return false;
        }
        if (!Objects.equals(this.claseProfesor, other.claseProfesor)) {
            return false;
        }
        return true;
    }



    public List<AsistenciaAlumno> getAsistenciasPorSemana() {
        LocalDate lunes = LocalDate.now().with(TemporalAdjusters.previous(DayOfWeek.MONDAY));
        LocalDate domingo = LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.SUNDAY));
        List<AsistenciaAlumno> asistenciasPorSemana = new ArrayList<>();
        for(AsistenciaAlumno asistenciaAlu:this.asistenciaAlumnos){
            LocalDate ingreso =  Instant.ofEpochMilli(asistenciaAlu.getIngreso().getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
            if(ingreso.isAfter(lunes.minusDays(1)) && ingreso.isBefore(domingo.plusDays(1))){
                asistenciasPorSemana.add(asistenciaAlu);
            }
        }
        return asistenciasPorSemana;
    }

    

}


